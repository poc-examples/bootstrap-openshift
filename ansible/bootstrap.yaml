---

- name: Setup Base Operators
  hosts: localhost
  connection: local
  gather_facts: yes
  collections:
    - community.okd
    - community.kubernetes
    - community.general
    - bootstrap.workshop
  vars:
    state: present
  
  vars_files:
    - ../vars.yaml

  tasks:

    - name: Get Terraform Outputs
      ansible.builtin.shell:
        cmd: "terraform output -json"
        chdir: "../terraform"
      register: tf_outputs
      when:
        - openshift.terraform is not defined or openshift.terraform == true

    - name: Convert JSON output to Dictionary
      ansible.builtin.set_fact:
        terraform_outputs: "{{ tf_outputs.stdout | from_json }}"
      when:
        - openshift.terraform is not defined or openshift.terraform == true

    - name: Set domain based on if domain is provided
      ansible.builtin.set_fact:
        openshift_domain: >-
          {{ 
            openshift.domain 
            if openshift.domain is defined and openshift.domain | length > 0
            else terraform_outputs.domain.value 
          }}

    - name: Connecting to OpenShift - Can Take up to 7-15 Minutes
      community.okd.openshift_auth:
        host: "https://api.{{ openshift_domain }}:6443"
        username: "{{ openshift.admin.credentials.username }}"
        password: "{{ openshift.admin.credentials.password }}"
        verify_ssl: false
      register: login
      retries: 45
      delay: 30

    - name: Waiting for OpenShift Healthy State - Can Take up to 12-15 Minutes
      community.kubernetes.k8s_info:
        host: "https://api.{{ openshift_domain }}:6443"
        api_key: "{{ login.openshift_auth.api_key }}"
        validate_certs: "{{ config.validate_certs }}"
        api_version: v1
        kind: Pod
      register: pod_info
      until:
        - pod_info.resources is defined
        - pod_info.resources | length > 0
        - pod_info.resources | selectattr('status.phase', 'equalto', 'Pending') | length == 0
      retries: 40
      delay: 30

    - name: Fetch the Ingress resource
      community.kubernetes.k8s_info:
        host: "https://api.{{ openshift_domain }}:6443"
        api_key: "{{ login.openshift_auth.api_key }}"
        validate_certs: "{{ config.validate_certs }}"
        api_version: config.openshift.io/v1
        kind: Ingress
        name: cluster
      register: ingress_info

    - name: Extract the domain from the Ingress resource
      set_fact:
        ingress_domain: "{{ ingress_info.resources[0].spec.domain | regex_replace('^apps\\.', '') }}"

    ## RedHat Supported
    ## Creates OpenShift GitOps Services With Cluster-Admin Permissions
    - name: Install OpenShift-GitOps Operator
      vars:
        api_url: "https://api.{{ openshift_domain }}:6443"
        token: "{{ login.openshift_auth.api_key }}"
        validate_certs: "{{ config.validate_certs }}"
        gitops: "{{ config.gitops }}"
      ansible.builtin.include_role:
        name: gitops-operator
      when:
        - config.gitops.enabled is defined
        - config.gitops.enabled is true

    - name: Configure OpenShift-GitOps Instance
      vars:
        domain: "{{ ingress_domain }}"
        api_url: "https://api.{{ openshift_domain }}:6443"
        token: "{{ login.openshift_auth.api_key }}"
        validate_certs: "{{ config.validate_certs }}"
        gitops: "{{ config.gitops }}"
        workshop: "{{ config.workshop }}"
      ansible.builtin.include_role:
        name: gitops-instance
      when:
        - config.gitops.enabled is defined
        - config.gitops.enabled is true

    - name: Secrets Management
      vars:
        api_url: "https://api.{{ openshift_domain }}:6443"
        token: "{{ login.openshift_auth.api_key }}"
        validate_certs: "{{ config.validate_certs }}"
        secrets: "{{ config.secrets }}"
      ansible.builtin.import_role:
        name: secrets-manager
